package com.Cutonala.audioyvideo;

import java.io.IOException;

import android.support.v7.app.ActionBarActivity;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaRecorder;
import android.os.Bundle;
import android.os.Environment;
import android.view.Menu;
import android.view.MenuItem;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

//public class Grabar extends ActionBarActivity {
public class Grabar extends ActionBarActivity implements Callback {
	private MediaRecorder mediaRecorder = null;
	private MediaPlayer mediaPlayer = null;
	
	private String fileName = null;
	private boolean recording = false;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_grabar);
		
		fileName = Environment.getExternalStorageDirectory() + "/test.mp4";
		SurfaceView surface = (SurfaceView)findViewById(R.id.surfaceView1);
		SurfaceHolder holder = surface.getHolder();
		holder.addCallback(this);
		holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
		
		final Button btnRec = (Button)findViewById(R.id.button1);
		final Button btnStop = (Button)findViewById(R.id.button2);
		final Button btnPlay = (Button)findViewById(R.id.button3);
		
		btnRec.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View v){
				btnRec.setEnabled(false);
				btnStop.setEnabled(true);
				btnPlay.setEnabled(false);
				prepareRecorder();
				mediaRecorder.setOutputFile(fileName);
				try{
					mediaRecorder.prepare();
				} catch (IllegalStateException e) {
				} catch (IOException e) {
				}
				
				mediaRecorder.start();
				recording = true;
				
			}
		});
		
		btnStop.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View v){
				btnRec.setEnabled(true);
				btnStop.setEnabled(false);
				btnPlay.setEnabled(true);
				if (recording){
					recording = false;
					mediaRecorder.stop();
					mediaRecorder.reset();
				} else if (mediaPlayer.isPlaying()){
					mediaPlayer.stop();
					mediaPlayer.reset();
				}
			}
		});
		
		btnPlay.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View v){
				btnRec.setEnabled(false);
				btnStop.setEnabled(true);
				btnPlay.setEnabled(false);
				mediaPlayer.setOnCompletionListener(new OnCompletionListener(){
					@Override
					public void onCompletion(MediaPlayer mp){
						btnRec.setEnabled(true);
						btnStop.setEnabled(false);
						btnPlay.setEnabled(true);
					}
				});
				try {
					mediaPlayer.setDataSource(fileName);
					mediaPlayer.prepare();
				} catch (IllegalStateException e) {
				} catch (IOException e) {
				} 
				mediaPlayer.start();
			}
		});
	}

	public void surfaceChanged(SurfaceHolder arg0, int arg1,int arg2, int arg3){
	}
	
	public void surfaceCreated(SurfaceHolder holder) {
		if (mediaRecorder == null){
			mediaRecorder = new MediaRecorder();
			mediaRecorder.setPreviewDisplay(holder.getSurface());
		}
		if (mediaPlayer == null){
			mediaPlayer = new MediaPlayer();
			mediaPlayer.setDisplay(holder);
		}
	}
	public void surfaceDestroyed(SurfaceHolder holder){
		mediaRecorder.release();
		mediaPlayer.release();
	}
	
	public void prepareRecorder(){
		mediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
		mediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
		mediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
		mediaRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.MPEG_4_SP);
		}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.grabar, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
